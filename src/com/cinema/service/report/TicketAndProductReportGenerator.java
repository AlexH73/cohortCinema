package com.cinema.service.report;

import com.cinema.util.exceptions.ReportDateRangeException;
import com.cinema.model.order.Order;

import java.time.LocalDate;
import java.util.List;

/**
 * –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á—ë—Ç–æ–≤ –ø–æ –±–∏–ª–µ—Ç–∞–º –∏ –ø—Ä–æ–¥—É–∫—Ç–∞–º.
 */
public class TicketAndProductReportGenerator implements IReportGenerator {
    private final List<Order> orders;

    public TicketAndProductReportGenerator(List<Order> orders) {
        this.orders = orders;
    }

    @Override
    public String generateProductSalesReport(String startDate, String endDate) {
        LocalDate start = LocalDate.parse(startDate);
        LocalDate end = LocalDate.parse(endDate);

        if (start.isAfter(end)) {
            throw new ReportDateRangeException("–ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –ø–æ–∑–∂–µ –∫–æ–Ω–µ—á–Ω–æ–π!");
        }

        double total = orders.stream()
                .filter(Order::isPaid)
                .filter(o -> {
                    LocalDate date = o.getUser().getCreatedAt().toLocalDate(); // –í—Ä–µ–º–µ–Ω–Ω–æ
                    return (date.isEqual(start) || date.isAfter(start)) &&
                            (date.isEqual(end) || date.isBefore(end));
                })
                .flatMap(o -> o.getProducts().stream())
                .mapToDouble(p -> p.getPrice())
                .sum();

        return "üßÉ –û—Ç—á–µ—Ç –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n" +
                "–ü–µ—Ä–∏–æ–¥: " + start + " - " + end + "\n" +
                "–û–±—â–∞—è —Å—É–º–º–∞: " + total + " ‚Ç¨";
    }

    @Override
    public String generateTicketSalesReport(String startDate, String endDate) {
        LocalDate start = LocalDate.parse(startDate);
        LocalDate end = LocalDate.parse(endDate);

        if (start.isAfter(end)) {
            throw new ReportDateRangeException("–ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –ø–æ–∑–∂–µ –∫–æ–Ω–µ—á–Ω–æ–π!");
        }

        double total = orders.stream()
                .filter(Order::isPaid)
                .filter(o -> {
                    LocalDate date = o.getUser().getCreatedAt().toLokcalDate(); // –í—Ä–µ–º–µ–Ω–Ω–æ, –ø–æ—Ç–æ–º –∑–∞–º–µ–Ω–∏–º –Ω–∞ –¥–∞—Ç—É –∑–∞–∫–∞–∑–∞
                    return (date.isEqual(start) || date.isAfter(start)) &&
                            (date.isEqual(end) || date.isBefore(end));
                })
                .flatMap( o -> o.getTickets().stream())
                .mapToDouble(t -> t.getSession().getTicketPrice())
                .sum();

        return "üí≥ –û—Ç—á–µ—Ç –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –±–∏–ª–µ—Ç–æ–≤\n" +
                "–ü–µ—Ä–∏–æ–¥: " + start + " - " + end + "\n" +
                "–û–±—â–∞—è —Å—É–º–º–∞: " + total + " ‚Ç¨";
    }
}
