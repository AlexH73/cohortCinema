package com.cinema.controller.product;

import com.cinema.model.product.Product;
import com.cinema.service.product.IProductService;

import java.util.List;
import java.util.Scanner;

/**
 * –ö–ª–∞—Å—Å ProductController –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏.
 */
public class ProductController {

    private final IProductService productService;
    private final Scanner scanner;

    public ProductController(IProductService productService) {
        this.productService = productService;
        this.scanner = new Scanner(System.in);
    }

    /**
     * –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏.
     */
    public void runProductMenu() {
        boolean exit = false;

        while (!exit) {
            System.out.println("\n=== –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏ ===");
            System.out.println("1. –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç");
            System.out.println("2. –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç");
            System.out.println("3. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã");
            System.out.println("4. –ù–∞–π—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç –ø–æ ID");
            System.out.println("0. –ù–∞–∑–∞–¥");

            System.out.print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ");
            String choice = scanner.nextLine();

            switch (choice) {
                case "1" -> addProduct();
                case "2" -> removeProduct();
                case "3" -> showAllProducts();
                case "4" -> findProductById();
                case "0" -> exit = true;
                default -> System.out.println("‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
            }
        }
    }

    private void addProduct() {
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞: ");
        String name = scanner.nextLine();

        System.out.print("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞: ");
        String description = scanner.nextLine();

        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –ø—Ä–æ–¥—É–∫—Ç–∞: ");
        double price;
        try {
            price = Double.parseDouble(scanner.nextLine());
        } catch (NumberFormatException e) {
            System.out.println("‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ü–µ–Ω—ã.");
            return;
        }

        Product product = new Product(name, description, price);
        productService.addProduct(product);
        System.out.println("‚úÖ –ü—Ä–æ–¥—É–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω: " + product);
    }

    private void removeProduct() {
        System.out.print("–í–≤–µ–¥–∏—Ç–µ ID –ø—Ä–æ–¥—É–∫—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ");
        String id = scanner.nextLine();

        boolean removed = productService.removeProductById(id);
        if (removed) {
            System.out.println("‚úÖ –ü—Ä–æ–¥—É–∫—Ç —É–¥–∞–ª—ë–Ω.");
        } else {
            System.out.println("‚ùå –ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.");
        }
    }

    private void showAllProducts() {
        List<Product> products = productService.getAllProducts();
        if (products.isEmpty()) {
            System.out.println("üîç –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø—É—Å—Ç.");
        } else {
            System.out.println("üì¶ –í—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã:");
            products.forEach(System.out::println);
        }
    }

    private void findProductById() {
        System.out.print("–í–≤–µ–¥–∏—Ç–µ ID –ø—Ä–æ–¥—É–∫—Ç–∞: ");
        String id = scanner.nextLine();

        Product product = productService.getProductById(id);
        if (product != null) {
            System.out.println("üîç –ù–∞–π–¥–µ–Ω –ø—Ä–æ–¥—É–∫—Ç: " + product);
        } else {
            System.out.println("‚ùå –ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.");
        }
    }
}

